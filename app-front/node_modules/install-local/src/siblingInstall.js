"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const _ = __importStar(require("lodash"));
const fs_1 = __importDefault(require("mz/fs"));
const path_1 = __importDefault(require("path"));
const helpers_1 = require("./helpers");
const index_1 = require("./index");
function filterTruthy(values) {
    return values.filter(v => v);
}
function readSiblingTargets() {
    const currentDirectoryName = path_1.default.basename(process.cwd());
    return fs_1.default.readdir('..')
        .then(dirs => dirs.filter(dir => dir !== currentDirectoryName))
        .then(dirs => dirs.map(dir => path_1.default.resolve('..', dir)))
        .then(dirs => Promise.all(dirs.map(directory => helpers_1.readPackageJson(directory)
        .then(packageJson => ({ directory, packageJson }))
        .catch(() => null))))
        .then(filterTruthy);
}
function siblingTargetsCurrent(siblingPackage) {
    const currentDirectory = path_1.default.resolve('.');
    return _.values(siblingPackage.packageJson.localDependencies)
        .some(localDependencyPath => path_1.default.resolve(localDependencyPath) === currentDirectory);
}
function siblingInstall() {
    return readSiblingTargets()
        .then(siblings => siblings.filter(siblingTargetsCurrent))
        .then(targets => {
        const sourceByTarget = {};
        targets.forEach(target => sourceByTarget[target.directory] = ['.']);
        const installer = new index_1.LocalInstaller(sourceByTarget);
        index_1.progress(installer);
        return installer.install();
    }).then(() => void 0);
}
exports.siblingInstall = siblingInstall;
//# sourceMappingURL=siblingInstall.js.map